// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.EFCore;

#nullable disable

namespace SigortaApp.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Policies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coverage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyPrice")
                        .HasColumnType("int");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Policies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coverage = "Full",
                            Created_at = new DateTime(2024, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1012),
                            End_Date = new DateTime(2025, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1004),
                            PolicyPrice = 1000,
                            PolicyType = "Health",
                            Start_Date = new DateTime(2024, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(994),
                            UsersId = 1
                        },
                        new
                        {
                            Id = 2,
                            Coverage = "Full",
                            Created_at = new DateTime(2024, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1015),
                            End_Date = new DateTime(2025, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1014),
                            PolicyPrice = 6000,
                            PolicyType = "Car",
                            Start_Date = new DateTime(2024, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1014),
                            UsersId = 1
                        },
                        new
                        {
                            Id = 3,
                            Coverage = "Full",
                            Created_at = new DateTime(2024, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1017),
                            End_Date = new DateTime(2025, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1017),
                            PolicyPrice = 2000,
                            PolicyType = "House",
                            Start_Date = new DateTime(2024, 5, 8, 6, 31, 31, 350, DateTimeKind.Local).AddTicks(1016),
                            UsersId = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.PolicyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Ownership_end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ownership_start_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PolicyUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ownership_end_date = new DateTime(2024, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            Ownership_start_date = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolicyId = 2,
                            UsersId = 1
                        },
                        new
                        {
                            Id = 2,
                            Ownership_end_date = new DateTime(2025, 6, 14, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            Ownership_start_date = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolicyId = 1,
                            UsersId = 1
                        },
                        new
                        {
                            Id = 3,
                            Ownership_end_date = new DateTime(2024, 12, 1, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            Ownership_start_date = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolicyId = 3,
                            UsersId = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<float>("TransactionPrice")
                        .HasColumnType("real");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PolicyId = 2,
                            TransactionPrice = 500f,
                            TransactionType = "Premium Payment",
                            UsersId = 1,
                            timestamp = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            PolicyId = 1,
                            TransactionPrice = 300f,
                            TransactionType = "Policy Renewal",
                            UsersId = 1,
                            timestamp = new DateTime(2024, 1, 15, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            PolicyId = 3,
                            TransactionPrice = 700f,
                            TransactionType = "Claim Reimbursement",
                            UsersId = 2,
                            timestamp = new DateTime(2024, 2, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Entities.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            Password = "SecurePassword123!",
                            PhoneNumber = "123-456-7890",
                            UserName = "JohnDoe"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            Password = "AnotherSecure123!",
                            PhoneNumber = "123-456-7891",
                            UserName = "JaneSmith"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2021, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            Password = "PasswordSecure456!",
                            PhoneNumber = "123-456-7892",
                            UserName = "AliceJohnson"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
